{"ast":null,"code":"var _jsxFileName = \"C:\\\\tasselgroupreact\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { authService } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('currentUser');\n      if (token && savedUser) {\n        try {\n          const user = JSON.parse(savedUser);\n          setCurrentUser(user);\n\n          // Verify token is still valid\n          await authService.fetchCurrentUser();\n        } catch (error) {\n          console.error('Auth initialization error:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const data = await authService.login(email, password);\n      setCurrentUser(data.user);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const data = await authService.register(userData);\n      setCurrentUser(data.user);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    authService.logout();\n    setCurrentUser(null);\n  };\n  const updateProfile = async profileData => {\n    try {\n      const data = await authService.updateProfile(profileData);\n      setCurrentUser(data.user);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    updateProfile,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","initializeAuth","token","localStorage","getItem","savedUser","user","JSON","parse","fetchCurrentUser","error","console","logout","login","email","password","data","register","userData","updateProfile","profileData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/tasselgroupreact/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { authService } from '../services/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const savedUser = localStorage.getItem('currentUser');\r\n\r\n      if (token && savedUser) {\r\n        try {\r\n          const user = JSON.parse(savedUser);\r\n          setCurrentUser(user);\r\n          \r\n          // Verify token is still valid\r\n          await authService.fetchCurrentUser();\r\n        } catch (error) {\r\n          console.error('Auth initialization error:', error);\r\n          logout();\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const data = await authService.login(email, password);\r\n      setCurrentUser(data.user);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const data = await authService.register(userData);\r\n      setCurrentUser(data.user);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    authService.logout();\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const data = await authService.updateProfile(profileData);\r\n      setCurrentUser(data.user);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}