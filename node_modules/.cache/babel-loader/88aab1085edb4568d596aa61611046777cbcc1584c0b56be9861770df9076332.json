{"ast":null,"code":"var _jsxFileName = \"C:\\\\tasselgroupreact\\\\src\\\\contexts\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const useApp = () => {\n  _s();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n_s(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AppProvider = ({\n  children\n}) => {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [modal, setModal] = useState({\n    isOpen: false,\n    title: '',\n    content: null,\n    size: 'md'\n  });\n\n  // Notification system\n  const showNotification = useCallback((message, type = 'info', duration = 5000) => {\n    const id = Date.now().toString();\n    const notification = {\n      id,\n      message,\n      type,\n      duration\n    };\n    setNotifications(prev => [...prev, notification]);\n\n    // Auto remove after duration\n    setTimeout(() => {\n      removeNotification(id);\n    }, duration);\n  }, []);\n  const removeNotification = useCallback(id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  }, []);\n\n  // Modal system\n  const openModal = useCallback((title, content, size = 'md') => {\n    setModal({\n      isOpen: true,\n      title,\n      content,\n      size\n    });\n  }, []);\n  const closeModal = useCallback(() => {\n    setModal({\n      isOpen: false,\n      title: '',\n      content: null,\n      size: 'md'\n    });\n  }, []);\n\n  // Global loading state\n  const setGlobalLoading = useCallback(isLoading => {\n    setLoading(isLoading);\n  }, []);\n\n  // Print functionality\n  const printContent = useCallback((title, content) => {\n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <html>\n        <head>\n          <title>${title}</title>\n          <style>\n            body { font-family: Arial, sans-serif; margin: 20px; }\n            h1 { color: #333; border-bottom: 2px solid #333; padding-bottom: 10px; }\n            .badge { padding: 5px 10px; border-radius: 10px; color: white; }\n            .bg-primary { background: #007bff; }\n            .bg-success { background: #28a745; }\n            .bg-warning { background: #ffc107; color: black; }\n            table { width: 100%; border-collapse: collapse; margin: 20px 0; }\n            th, td { padding: 10px; border: 1px solid #ddd; text-align: left; }\n            th { background: #f8f9fa; }\n          </style>\n        </head>\n        <body>\n          <h1>${title}</h1>\n          <p><strong>Generated:</strong> ${new Date().toLocaleString()}</p>\n          <hr>\n          ${content}\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.print();\n  }, []);\n  const value = {\n    // Notifications\n    notifications,\n    showNotification,\n    removeNotification,\n    // Modal\n    modal,\n    openModal,\n    closeModal,\n    // Loading\n    loading,\n    setGlobalLoading,\n    // Utilities\n    printContent\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s2(AppProvider, \"TwZMg9q0Vi+bG/WwrhYhQT3jSSQ=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","jsxDEV","_jsxDEV","AppContext","useApp","_s","context","Error","AppProvider","children","_s2","notifications","setNotifications","loading","setLoading","modal","setModal","isOpen","title","content","size","showNotification","message","type","duration","id","Date","now","toString","notification","prev","setTimeout","removeNotification","filter","openModal","closeModal","setGlobalLoading","isLoading","printContent","printWindow","window","open","document","write","toLocaleString","close","print","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/tasselgroupreact/src/contexts/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const useApp = () => {\r\n  const context = useContext(AppContext);\r\n  if (!context) {\r\n    throw new Error('useApp must be used within an AppProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [modal, setModal] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    content: null,\r\n    size: 'md'\r\n  });\r\n\r\n  // Notification system\r\n  const showNotification = useCallback((message, type = 'info', duration = 5000) => {\r\n    const id = Date.now().toString();\r\n    const notification = {\r\n      id,\r\n      message,\r\n      type,\r\n      duration\r\n    };\r\n\r\n    setNotifications(prev => [...prev, notification]);\r\n\r\n    // Auto remove after duration\r\n    setTimeout(() => {\r\n      removeNotification(id);\r\n    }, duration);\r\n  }, []);\r\n\r\n  const removeNotification = useCallback((id) => {\r\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\r\n  }, []);\r\n\r\n  // Modal system\r\n  const openModal = useCallback((title, content, size = 'md') => {\r\n    setModal({\r\n      isOpen: true,\r\n      title,\r\n      content,\r\n      size\r\n    });\r\n  }, []);\r\n\r\n  const closeModal = useCallback(() => {\r\n    setModal({\r\n      isOpen: false,\r\n      title: '',\r\n      content: null,\r\n      size: 'md'\r\n    });\r\n  }, []);\r\n\r\n  // Global loading state\r\n  const setGlobalLoading = useCallback((isLoading) => {\r\n    setLoading(isLoading);\r\n  }, []);\r\n\r\n  // Print functionality\r\n  const printContent = useCallback((title, content) => {\r\n    const printWindow = window.open('', '_blank');\r\n    printWindow.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>${title}</title>\r\n          <style>\r\n            body { font-family: Arial, sans-serif; margin: 20px; }\r\n            h1 { color: #333; border-bottom: 2px solid #333; padding-bottom: 10px; }\r\n            .badge { padding: 5px 10px; border-radius: 10px; color: white; }\r\n            .bg-primary { background: #007bff; }\r\n            .bg-success { background: #28a745; }\r\n            .bg-warning { background: #ffc107; color: black; }\r\n            table { width: 100%; border-collapse: collapse; margin: 20px 0; }\r\n            th, td { padding: 10px; border: 1px solid #ddd; text-align: left; }\r\n            th { background: #f8f9fa; }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <h1>${title}</h1>\r\n          <p><strong>Generated:</strong> ${new Date().toLocaleString()}</p>\r\n          <hr>\r\n          ${content}\r\n        </body>\r\n      </html>\r\n    `);\r\n    printWindow.document.close();\r\n    printWindow.print();\r\n  }, []);\r\n\r\n  const value = {\r\n    // Notifications\r\n    notifications,\r\n    showNotification,\r\n    removeNotification,\r\n    \r\n    // Modal\r\n    modal,\r\n    openModal,\r\n    closeModal,\r\n    \r\n    // Loading\r\n    loading,\r\n    setGlobalLoading,\r\n    \r\n    // Utilities\r\n    printContent\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}