{"ast":null,"code":"import { apiCall } from './api';\nexport const authService = {\n  async fetchCurrentUser() {\n    try {\n      const data = await apiCall('/auth/me');\n      const user = data.user;\n      localStorage.setItem('currentUser', JSON.stringify(user));\n      return user;\n    } catch (error) {\n      console.error('Failed to fetch current user:', error);\n      localStorage.removeItem('token');\n      localStorage.removeItem('currentUser');\n      throw error;\n    }\n  },\n  async login(email, password) {\n    const data = await apiCall('/auth/login', {\n      method: 'POST',\n      body: {\n        email,\n        password\n      }\n    });\n    if (!data.token || !data.user) {\n      throw new Error('Invalid response from server');\n    }\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('currentUser', JSON.stringify(data.user));\n    return data;\n  },\n  async register(userData) {\n    const data = await apiCall('/auth/register', {\n      method: 'POST',\n      body: userData\n    });\n    if (!data.token || !data.user) {\n      throw new Error('Invalid response from server');\n    }\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('currentUser', JSON.stringify(data.user));\n    return data;\n  },\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('currentUser');\n  },\n  async updateProfile(profileData) {\n    const data = await apiCall('/auth/profile', {\n      method: 'PUT',\n      body: profileData\n    });\n    if (data.user) {\n      localStorage.setItem('currentUser', JSON.stringify(data.user));\n    }\n    return data;\n  }\n};","map":{"version":3,"names":["apiCall","authService","fetchCurrentUser","data","user","localStorage","setItem","JSON","stringify","error","console","removeItem","login","email","password","method","body","token","Error","register","userData","logout","updateProfile","profileData"],"sources":["C:/tasselgroupreact/src/services/auth.js"],"sourcesContent":["import { apiCall } from './api';\r\n\r\nexport const authService = {\r\n  async fetchCurrentUser() {\r\n    try {\r\n      const data = await apiCall('/auth/me');\r\n      const user = data.user;\r\n      localStorage.setItem('currentUser', JSON.stringify(user));\r\n      return user;\r\n    } catch (error) {\r\n      console.error('Failed to fetch current user:', error);\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('currentUser');\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async login(email, password) {\r\n    const data = await apiCall('/auth/login', {\r\n      method: 'POST',\r\n      body: { email, password }\r\n    });\r\n\r\n    if (!data.token || !data.user) {\r\n      throw new Error('Invalid response from server');\r\n    }\r\n\r\n    localStorage.setItem('token', data.token);\r\n    localStorage.setItem('currentUser', JSON.stringify(data.user));\r\n    return data;\r\n  },\r\n\r\n  async register(userData) {\r\n    const data = await apiCall('/auth/register', {\r\n      method: 'POST',\r\n      body: userData\r\n    });\r\n\r\n    if (!data.token || !data.user) {\r\n      throw new Error('Invalid response from server');\r\n    }\r\n\r\n    localStorage.setItem('token', data.token);\r\n    localStorage.setItem('currentUser', JSON.stringify(data.user));\r\n    return data;\r\n  },\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('currentUser');\r\n  },\r\n\r\n  async updateProfile(profileData) {\r\n    const data = await apiCall('/auth/profile', {\r\n      method: 'PUT',\r\n      body: profileData\r\n    });\r\n\r\n    if (data.user) {\r\n      localStorage.setItem('currentUser', JSON.stringify(data.user));\r\n    }\r\n\r\n    return data;\r\n  }\r\n};"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAE/B,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,gBAAgBA,CAAA,EAAG;IACvB,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMH,OAAO,CAAC,UAAU,CAAC;MACtC,MAAMI,IAAI,GAAGD,IAAI,CAACC,IAAI;MACtBC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;MACzD,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDJ,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;MAChCN,YAAY,CAACM,UAAU,CAAC,aAAa,CAAC;MACtC,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMG,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC3B,MAAMX,IAAI,GAAG,MAAMH,OAAO,CAAC,aAAa,EAAE;MACxCe,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;QAAEH,KAAK;QAAEC;MAAS;IAC1B,CAAC,CAAC;IAEF,IAAI,CAACX,IAAI,CAACc,KAAK,IAAI,CAACd,IAAI,CAACC,IAAI,EAAE;MAC7B,MAAM,IAAIc,KAAK,CAAC,8BAA8B,CAAC;IACjD;IAEAb,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACc,KAAK,CAAC;IACzCZ,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAACC,IAAI,CAAC,CAAC;IAC9D,OAAOD,IAAI;EACb,CAAC;EAED,MAAMgB,QAAQA,CAACC,QAAQ,EAAE;IACvB,MAAMjB,IAAI,GAAG,MAAMH,OAAO,CAAC,gBAAgB,EAAE;MAC3Ce,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEI;IACR,CAAC,CAAC;IAEF,IAAI,CAACjB,IAAI,CAACc,KAAK,IAAI,CAACd,IAAI,CAACC,IAAI,EAAE;MAC7B,MAAM,IAAIc,KAAK,CAAC,8BAA8B,CAAC;IACjD;IAEAb,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACc,KAAK,CAAC;IACzCZ,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAACC,IAAI,CAAC,CAAC;IAC9D,OAAOD,IAAI;EACb,CAAC;EAEDkB,MAAMA,CAAA,EAAG;IACPhB,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCN,YAAY,CAACM,UAAU,CAAC,aAAa,CAAC;EACxC,CAAC;EAED,MAAMW,aAAaA,CAACC,WAAW,EAAE;IAC/B,MAAMpB,IAAI,GAAG,MAAMH,OAAO,CAAC,eAAe,EAAE;MAC1Ce,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEO;IACR,CAAC,CAAC;IAEF,IAAIpB,IAAI,CAACC,IAAI,EAAE;MACbC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAACC,IAAI,CAAC,CAAC;IAChE;IAEA,OAAOD,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}