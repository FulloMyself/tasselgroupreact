{"ast":null,"code":"// API configuration and helper functions\nexport const getApiBaseUrl = () => {\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    return 'http://localhost:5000/api';\n  } else {\n    return 'https://tasselgroup-back.onrender.com/api';\n  }\n};\nconst API_BASE = getApiBaseUrl();\nexport const apiCall = async (endpoint, options = {}) => {\n  var _options$method;\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...(token && {\n        'Authorization': `Bearer ${token}`\n      }),\n      ...options.headers\n    },\n    ...options\n  };\n  if (options.body && !['GET', 'HEAD'].includes(((_options$method = options.method) === null || _options$method === void 0 ? void 0 : _options$method.toUpperCase()) || 'GET')) {\n    config.body = JSON.stringify(options.body);\n  }\n  try {\n    console.log(`📡 Making API call to: ${API_BASE}${endpoint}`);\n    const response = await fetch(`${API_BASE}${endpoint}`, config);\n    const contentType = response.headers.get('content-type');\n    let data;\n    if (contentType && contentType.includes('application/json')) {\n      data = await response.json();\n    } else {\n      const text = await response.text();\n      throw new Error(`Server returned non-JSON response: ${text}`);\n    }\n    if (!response.ok) {\n      throw new Error(data.message || `HTTP error! status: ${response.status}`);\n    }\n    return data;\n  } catch (error) {\n    console.error(`❌ API call failed: ${error.message}`);\n    if (error.message.includes('Failed to fetch')) {\n      throw new Error('Cannot connect to server. Please check your internet connection and try again.');\n    }\n    throw error;\n  }\n};\n\n// Specific API methods\nexport const apiService = {\n  // Products\n  getProducts: () => apiCall('/products'),\n  // Services\n  getServices: () => apiCall('/services'),\n  createService: serviceData => apiCall('/services', {\n    method: 'POST',\n    body: serviceData\n  }),\n  // Bookings\n  getBookings: (params = '') => apiCall(`/bookings${params}`),\n  createBooking: bookingData => apiCall('/bookings', {\n    method: 'POST',\n    body: bookingData\n  }),\n  updateBookingStatus: (bookingId, status) => apiCall(`/bookings/${bookingId}/status`, {\n    method: 'PATCH',\n    body: {\n      status\n    }\n  }),\n  assignStaffToBooking: (bookingId, staffId) => apiCall(`/bookings/${bookingId}/assign-staff`, {\n    method: 'PATCH',\n    body: {\n      staffId\n    }\n  }),\n  // Gift Packages\n  getGiftPackages: () => apiCall('/gift-packages'),\n  createGiftOrder: giftData => apiCall('/gift-orders', {\n    method: 'POST',\n    body: giftData\n  }),\n  // Orders\n  getOrders: (params = '') => apiCall(`/orders${params}`),\n  createOrder: orderData => apiCall('/orders', {\n    method: 'POST',\n    body: orderData\n  }),\n  updateOrderStatus: (orderId, status) => apiCall(`/orders/${orderId}/status`, {\n    method: 'PATCH',\n    body: {\n      status\n    }\n  }),\n  // Staff\n  getStaffMembers: () => apiCall('/users/staff'),\n  // Dashboard\n  getAdminDashboard: () => apiCall('/dashboard/admin'),\n  getStaffDashboard: () => apiCall('/dashboard/staff'),\n  getCustomerOrders: () => apiCall('/dashboard/orders/my-orders'),\n  getCustomerBookings: () => apiCall('/dashboard/bookings/my-bookings'),\n  getCustomerGifts: () => apiCall('/dashboard/gift-orders/my-gifts'),\n  // Payment\n  initiatePayment: orderData => apiCall('/payment/initiate', {\n    method: 'POST',\n    body: orderData\n  }),\n  createManualOrder: orderData => apiCall('/payment/manual-order', {\n    method: 'POST',\n    body: orderData\n  }),\n  // Receipts\n  generateReceipt: (type, id) => apiCall(`/dashboard/receipt/${type}/${id}`)\n};","map":{"version":3,"names":["getApiBaseUrl","window","location","hostname","API_BASE","apiCall","endpoint","options","_options$method","token","localStorage","getItem","config","headers","body","includes","method","toUpperCase","JSON","stringify","console","log","response","fetch","contentType","get","data","json","text","Error","ok","message","status","error","apiService","getProducts","getServices","createService","serviceData","getBookings","params","createBooking","bookingData","updateBookingStatus","bookingId","assignStaffToBooking","staffId","getGiftPackages","createGiftOrder","giftData","getOrders","createOrder","orderData","updateOrderStatus","orderId","getStaffMembers","getAdminDashboard","getStaffDashboard","getCustomerOrders","getCustomerBookings","getCustomerGifts","initiatePayment","createManualOrder","generateReceipt","type","id"],"sources":["C:/tasselgroupreact/src/services/api.js"],"sourcesContent":["// API configuration and helper functions\r\nexport const getApiBaseUrl = () => {\r\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\r\n    return 'http://localhost:5000/api';\r\n  } else {\r\n    return 'https://tasselgroup-back.onrender.com/api';\r\n  }\r\n};\r\n\r\nconst API_BASE = getApiBaseUrl();\r\n\r\nexport const apiCall = async (endpoint, options = {}) => {\r\n  const token = localStorage.getItem('token');\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...(token && { 'Authorization': `Bearer ${token}` }),\r\n      ...options.headers\r\n    },\r\n    ...options\r\n  };\r\n\r\n  if (options.body && !['GET', 'HEAD'].includes(options.method?.toUpperCase() || 'GET')) {\r\n    config.body = JSON.stringify(options.body);\r\n  }\r\n\r\n  try {\r\n    console.log(`📡 Making API call to: ${API_BASE}${endpoint}`);\r\n    const response = await fetch(`${API_BASE}${endpoint}`, config);\r\n\r\n    const contentType = response.headers.get('content-type');\r\n    let data;\r\n\r\n    if (contentType && contentType.includes('application/json')) {\r\n      data = await response.json();\r\n    } else {\r\n      const text = await response.text();\r\n      throw new Error(`Server returned non-JSON response: ${text}`);\r\n    }\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.message || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return data;\r\n\r\n  } catch (error) {\r\n    console.error(`❌ API call failed: ${error.message}`);\r\n    if (error.message.includes('Failed to fetch')) {\r\n      throw new Error('Cannot connect to server. Please check your internet connection and try again.');\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Specific API methods\r\nexport const apiService = {\r\n  // Products\r\n  getProducts: () => apiCall('/products'),\r\n  \r\n  // Services\r\n  getServices: () => apiCall('/services'),\r\n  createService: (serviceData) => apiCall('/services', { method: 'POST', body: serviceData }),\r\n  \r\n  // Bookings\r\n  getBookings: (params = '') => apiCall(`/bookings${params}`),\r\n  createBooking: (bookingData) => apiCall('/bookings', { method: 'POST', body: bookingData }),\r\n  updateBookingStatus: (bookingId, status) => \r\n    apiCall(`/bookings/${bookingId}/status`, { method: 'PATCH', body: { status } }),\r\n  assignStaffToBooking: (bookingId, staffId) =>\r\n    apiCall(`/bookings/${bookingId}/assign-staff`, { method: 'PATCH', body: { staffId } }),\r\n  \r\n  // Gift Packages\r\n  getGiftPackages: () => apiCall('/gift-packages'),\r\n  createGiftOrder: (giftData) => apiCall('/gift-orders', { method: 'POST', body: giftData }),\r\n  \r\n  // Orders\r\n  getOrders: (params = '') => apiCall(`/orders${params}`),\r\n  createOrder: (orderData) => apiCall('/orders', { method: 'POST', body: orderData }),\r\n  updateOrderStatus: (orderId, status) =>\r\n    apiCall(`/orders/${orderId}/status`, { method: 'PATCH', body: { status } }),\r\n  \r\n  // Staff\r\n  getStaffMembers: () => apiCall('/users/staff'),\r\n  \r\n  // Dashboard\r\n  getAdminDashboard: () => apiCall('/dashboard/admin'),\r\n  getStaffDashboard: () => apiCall('/dashboard/staff'),\r\n  getCustomerOrders: () => apiCall('/dashboard/orders/my-orders'),\r\n  getCustomerBookings: () => apiCall('/dashboard/bookings/my-bookings'),\r\n  getCustomerGifts: () => apiCall('/dashboard/gift-orders/my-gifts'),\r\n  \r\n  // Payment\r\n  initiatePayment: (orderData) => apiCall('/payment/initiate', { method: 'POST', body: orderData }),\r\n  createManualOrder: (orderData) => apiCall('/payment/manual-order', { method: 'POST', body: orderData }),\r\n  \r\n  // Receipts\r\n  generateReceipt: (type, id) => apiCall(`/dashboard/receipt/${type}/${id}`)\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}